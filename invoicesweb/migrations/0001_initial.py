# Generated by Django 4.0.2 on 2022-02-19 21:01

import django.core.validators
from django.db import migrations, models
import invoicesweb.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contractor',
            fields=[
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('company_name', models.CharField(max_length=32)),
                ('tax_number', models.CharField(default='1', max_length=32)),
                ('contractor_tax_number', models.CharField(default=9999999999, max_length=30, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator(code='invalid_tax_number', message='Tax number consists of 10 or 11 characters', regex='\\d{10}|\\d{11}')])),
                ('street', models.CharField(max_length=32)),
                ('house_number', models.SmallIntegerField()),
                ('flat_number', models.SmallIntegerField(blank=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_type', models.CharField(choices=[(0, 'Normal'), (1, 'Correction'), (2, 'Proforma')], default=0, max_length=1)),
                ('invoice_number', invoicesweb.models.InvoiceNumber(default='2022_02_02', max_length=11, primary_key=True, serialize=False)),
                ('contractor_tax_number', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(code='invalid_tax_number', message='Tax number consists of 10 or 11 characters', regex='\\d{10}|\\d{11}')])),
                ('issue_date', models.DateField(default='2022-02-19')),
            ],
        ),
        migrations.CreateModel(
            name='InvoicePosition',
            fields=[
                ('product_or_service', models.TextField(default='flower', primary_key=True, serialize=False)),
                ('unit', models.CharField(choices=[(0, 'pcs.'), (1, 'serv.'), (2, 'm'), (3, 'l'), (4, 'kg')], default=0, max_length=1)),
                ('price_per_unit_net', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('amount', models.PositiveSmallIntegerField(default=1)),
                ('total_price_net', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('tax_rate', models.CharField(choices=[(0, 0.23), (1, 0.08), (2, 0.05), (3, 0.0), (4, 'free')], default=0.23, max_length=1)),
                ('total_price_gross', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
            ],
        ),
    ]
